#!/bin/bash

# AI CLI AutoSave - Never lose your AI conversations again
# https://github.com/yourusername/ai-cli-autosave
# Version: 1.0.0

# Default configuration
DEFAULT_LOG_DIR="${AI_LOG_DIR:-.ai-cli-autosave}"
DEFAULT_BACKUP_INTERVAL="${AI_BACKUP_INTERVAL:-60}"
DEFAULT_AI_TOOL="${1:-claude}"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Parse command line arguments
show_help() {
    cat << EOF
AI CLI AutoSave - Real-time conversation logging for AI tools

Usage: ai-autosave [OPTIONS] [COMMAND]

COMMAND:
    claude          Start Claude with auto-save (default)
    gemini          Start Gemini with auto-save
    sgpt            Start sgpt with auto-save
    [custom]        Any other command to run with auto-save

OPTIONS:
    -d, --dir DIR           Log directory (default: .ai-cli-log)
    -i, --interval SECONDS  Backup interval (default: 60)
    -m, --method METHOD     Save method: 'tee' or 'script' (default: tee)
    -s, --silent            Don't show save notifications
    -h, --help              Show this help message

ENVIRONMENT VARIABLES:
    AI_LOG_DIR              Default log directory
    AI_BACKUP_INTERVAL      Default backup interval

Examples:
    ai-autosave                     # Start Claude with auto-save
    ai-autosave gemini              # Start Gemini with auto-save
    ai-autosave -d logs/ claude     # Custom log directory
    ai-autosave -i 30 claude        # Backup every 30 seconds
    ai-autosave -m script claude    # Use script method

EOF
    exit 0
}

# Initialize variables
LOG_DIR="$DEFAULT_LOG_DIR"
BACKUP_INTERVAL="$DEFAULT_BACKUP_INTERVAL"
METHOD="tee"
SILENT=false
COMMAND=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            ;;
        -d|--dir)
            LOG_DIR="$2"
            shift 2
            ;;
        -i|--interval)
            BACKUP_INTERVAL="$2"
            shift 2
            ;;
        -m|--method)
            METHOD="$2"
            shift 2
            ;;
        -s|--silent)
            SILENT=true
            shift
            ;;
        *)
            COMMAND="$1"
            shift
            break
            ;;
    esac
done

# Set default command if not specified
if [ -z "$COMMAND" ]; then
    COMMAND="$DEFAULT_AI_TOOL"
fi

# Validate method
if [ "$METHOD" != "tee" ] && [ "$METHOD" != "script" ]; then
    echo -e "${RED}Error: Invalid method '$METHOD'. Use 'tee' or 'script'${NC}"
    exit 1
fi

# Check if command exists
if ! command -v "$COMMAND" &> /dev/null; then
    echo -e "${RED}Error: Command '$COMMAND' not found${NC}"
    echo "Please make sure $COMMAND is installed and in your PATH"
    exit 1
fi

# Create log directory
mkdir -p "$LOG_DIR"

# Generate timestamp and filenames
timestamp=$(date +"%Y%m%d-%H%M%S")
LOG_FILE="$LOG_DIR/${COMMAND}-${timestamp}.txt"
TEMP_LOG="$LOG_DIR/.temp-${COMMAND}-session.txt"

# Print startup message
if [ "$SILENT" = false ]; then
    echo -e "${GREEN}=== AI CLI AutoSave ===${NC}"
    echo -e "${BLUE}Command:${NC} $COMMAND"
    echo -e "${BLUE}Method:${NC} $METHOD"
    echo -e "${BLUE}Log directory:${NC} $LOG_DIR"
    echo -e "${BLUE}Log file:${NC} $LOG_FILE"
    if [ "$METHOD" = "script" ]; then
        echo -e "${BLUE}Backup interval:${NC} $BACKUP_INTERVAL seconds"
    fi
    echo -e "${GREEN}========================${NC}"
    echo
fi

# Function to save session (for script method)
save_session() {
    if [ -f "$TEMP_LOG" ] && [ "$SILENT" = false ]; then
        echo -e "\n${GREEN}[Session saved to: $LOG_FILE]${NC}" >&2
    fi
}

# Tee method - real-time logging
if [ "$METHOD" = "tee" ]; then
    # Run command with tee for real-time logging
    $COMMAND "$@" 2>&1 | tee -a "$LOG_FILE"
    
    if [ "$SILENT" = false ]; then
        echo
        echo -e "${GREEN}Session saved to: $LOG_FILE${NC}"
    fi

# Script method - with periodic backups
elif [ "$METHOD" = "script" ]; then
    # Trap exit signals
    trap save_session EXIT INT TERM
    
    # Start background auto-backup process
    if [ "$BACKUP_INTERVAL" -gt 0 ]; then
        (
            while true; do
                sleep "$BACKUP_INTERVAL"
                if [ -f "$TEMP_LOG" ]; then
                    cp "$TEMP_LOG" "$LOG_FILE"
                    if [ "$SILENT" = false ]; then
                        echo -e "\n${YELLOW}[Auto-backup saved]${NC}" >&2
                    fi
                fi
            done
        ) &
        BACKUP_PID=$!
    fi
    
    # Use script command to capture everything
    script -q -f "$TEMP_LOG" -c "$COMMAND $*"
    
    # Kill background backup process if exists
    if [ ! -z "$BACKUP_PID" ]; then
        kill $BACKUP_PID 2>/dev/null
    fi
    
    # Final save
    if [ -f "$TEMP_LOG" ]; then
        mv "$TEMP_LOG" "$LOG_FILE"
    fi
    
    save_session
fi